<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
        "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<!--3.1.6. Frequently asked questions-->
<section id="JCR.DeveloperReference.Basic.FAQs" role="NotInToc">
  <title>Frequently asked questions</title>
<qandaset>
  <qandaentry xml:id="JCR.FAQ.JCR.Core.AvoidMemoryLeaks">
	<question>
		<para><emphasis role="bold">How to open and close a session properly to avoid memory leaks?</emphasis></para>
	</question>
	<answer>
	  <programlisting language="java">Session session = repository.login(credentials);
		try
		{
		// here your code
		}
		finally
		{
		session.logout();
		}
	  </programlisting>
	</answer>
  </qandaentry>

  <qandaentry>
      <question xml:id="JCR.FAQ.JCR.Core.CheckIfItemExistsBeforeGettingValue">
        <para><emphasis role="bold">What should I use to check if an Item exists before getting the Value?</emphasis></para>
      </question>
      <answer>
        <para>Use <parameter>Session.itemExists(String absPath)</parameter>, <parameter>Node.hasNode(String
          relPath)</parameter> or <parameter>Property.hasProperty(String name)</parameter>. It is also possible
          to check <parameter>Node.hasNodes()</parameter> and <parameter>Node.hasProprties()</parameter>.
        </para>
      </answer>
    </qandaentry>

  <qandaentry xml:id="JCR.FAQ.JCR.Core.UsegetNodeByUUID">
      <question>
            <para><emphasis role="bold">Does it make sense to have all the nodes referable to use <parameter>getNodeByUUID</parameter> all the time?</emphasis></para>
      </question>

      <answer>
        <para>Until it is applicable for a business logic, it can be. But take
          in account the paths are human readable and lets you think in
          hierarchy. If it is important, a location based approach is
          preferable.
        </para>
      </answer>
    </qandaentry>

  <qandaentry xml:id="JCR.FAQ.JCR.Core.Session.getNodeByUUIDOrSession.getItem">
      <question>
        <para><emphasis role="bold">Is it better to use <parameter>Session.getNodeByUUID</parameter> or <parameter>Session.getItem</parameter>?</emphasis></para>
      </question>

      <answer>
        <para><parameter>Session.getNodeByUUID()</parameter> about 2.5 times faster of
          <parameter>Session.getItem(String)</parameter> and only 25% faster of <parameter>Node.getNode(String)</parameter>.
          See the daily test results for such comparisons in the following link for an example.
        </para>

        <para>
          <ulink
                  url="http://tests.exoplatform.org/jcr.html">
            http://tests.exoplatform.org/jcr.html
          </ulink>
        </para>
      </answer>
    </qandaentry>

  <qandaentry xml:id="JCR.FAQ.JCR.Core.HowToUseObservationProperly">
      <question>
		<para><emphasis role="bold">How to use Observation properly?</emphasis></para>
      </question>
      <answer>
        <para>JCR Observation is a way to listen on persistence changes of a
          Repository. It provides several options to configure the listener for
          an interesting only changes. To use properly, it is important to
          understand concept of events filtering for a registered EventListener
          (8.3.3 Observation Manager). An often confusing part, it is the
          <emphasis role="bold">absPath</emphasis>, it is an associated parent of
          a location you want to observe events on. For example, it is a parent of child
          node(s) or this parent property(ies); if
          <emphasis
                  role="bold">isDeep
          </emphasis>
          is true, then you will get events of all
          the subtree of child nodes also. The same actual for
          <emphasis
                  role="bold">uuid
          </emphasis>
          and
          <emphasis
                  role="bold">nodeTypeName
          </emphasis>
          parameters of
          the <parameter>ObservationManager.addEventListener()</parameter> method.
        </para>
      </answer>
    </qandaentry>

  <qandaentry xml:id="JCR.FAQ.JCR.Core.WhatDefaultQueryOrdering">
      <question><para><emphasis role="bold">What is default query ordering?</emphasis></para></question>
      <answer>
        <para>By default, (if query does not contain any ordering statements)
          result nodes are sorted by document order.
        </para>
      </answer>
  </qandaentry>
  <qandaentry xml:id="JCR.FAQ.JCR.Core.eXoJCRIndexerUsesContentEncoding">
      <question>
         <para><emphasis role="bold">How eXo JCR indexer uses content encoding?</emphasis></para>
      </question>
      <answer>
        <para>1. Indexer uses the <parameter>jcr:encoding</parameter> property of the <parameter>nt:resource</parameter> node (used
          as the <parameter>jcr:content</parameter> child node of <parameter>nt:file</parameter>).
		</para>
		<para>2. If no <parameter>jcr:encoding</parameter> property
          set the Document Service will use the one configured in the service
          (defaultEncoding).
		</para>
		<para>3. If nothing is configured a JVM, the default
          encoding will be used.
        </para>
      </answer>
  </qandaentry>
  <qandaentry xml:id="JCR.FAQ.JCR.Core.UseSessionAfterLogingOut">
      <question>
		<para><emphasis role="bold">Can I use Session after logging out?</emphasis></para>
      </question>
      <answer>
        <para>No. Any instance of Session or Node (acquired through session)
          should not be used after logging out anymore. At least, it is highly
          recommended not to use.
        </para>
      </answer>
  </qandaentry>
</qandaset>
</section>