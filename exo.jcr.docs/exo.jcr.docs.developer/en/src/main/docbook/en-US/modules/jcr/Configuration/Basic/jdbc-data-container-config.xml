<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<!-- 2.1.3 JDBC Data Container Configuration -->
<section id="JCR.JDBCDataContainerConfig" role="NotInToc">
  <title>JDBC Data Container configuration</title>
	
    <para xml:id="JCR.JDBCDataContainerConfig.NotesForMicrosoftWindowsUsers">The current configuration of JCR uses <ulink
    url="http://commons.apache.org/dbcp/">Apache DBCP</ulink> connection pool
    (<classname>org.apache.commons.dbcp.BasicDataSourceFactory</classname>).
    It is possible to set a big value for maxActive parameter in
    <filename>configuration.xml</filename>. That means lots of TCP/IP
    ports from a client machine inside the pool are used, such as JDBC driver. As the
    result, the data container can throw exceptions like "Address already in
    use". To solve this problem, you have to configure the client's machine
    networking software for using shorter timeouts for opened TCP/IP
    ports.</para>

    <para>Microsoft Windows has <parameter>MaxUserPort</parameter>,
    <parameter>TcpTimedWaitDelay</parameter> registry keys in the node
    <parameter>HKEY_LOCAL_MACHINESYSTEMCurrentControlSetServicesTcpipParameters</parameter>,
    by default these keys are unset. Set each one with values as follows:<itemizedlist>
      <listitem>
          <para>"TcpTimedWaitDelay"=dword:0000001e, sets TIME_WAIT parameter
          to 30 seconds (default value is "240").</para>
      </listitem>

      <listitem>
          <para>"MaxUserPort"=dword:00001b58, sets the maximum of open ports
          to 7000 or higher (default value is "5000").</para>
      </listitem>
    </itemizedlist></para>

    <para>A sample registry file is below:</para>

    <programlisting>Windows Registry Editor Version 5.00

[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters]
"MaxUserPort"=dword:00001b58
"TcpTimedWaitDelay"=dword:0000001e</programlisting>  
	
<!--Multi-database configuration-->

<section id="JCR.JDBCDataContainerConfig.Multi-databaseConfiguration">
    <title>Multi-database configuration</title>

    <para>You need to configure each workspace in a repository. You may have
    each one on different remote servers as far as you need.</para>

    <para>First of all, configure the data containers in the
    <classname>org.exoplatform.services.naming.InitialContextInitializer</classname>
    service. It is the JNDI context initializer which registers (binds) naming
    resources (DataSources) for data containers.</para>

    <para>For example, the configuration for two data containers
    <parameter>jdbcjcr</parameter> - local HSQLDB,
    <parameter>jdbcjcr1</parameter> - remote MySQL) in standalone mode is as follows :</para>

<programlisting language="xml">&lt;component&gt;
    &lt;key&gt;org.exoplatform.services.naming.InitialContextInitializer&lt;/key&gt;
    &lt;type&gt;org.exoplatform.services.naming.InitialContextInitializer&lt;/type&gt;
    &lt;component-plugins&gt;
      &lt;component-plugin&gt;
        &lt;name&gt;bind.datasource&lt;/name&gt;
        &lt;set-method&gt;addPlugin&lt;/set-method&gt;
        &lt;type&gt;org.exoplatform.services.naming.BindReferencePlugin&lt;/type&gt;
        &lt;init-params&gt;
          &lt;value-param&gt;
            &lt;name&gt;bind-name&lt;/name&gt;
            &lt;value&gt;jdbcjcr&lt;/value&gt;
          &lt;/value-param&gt;
          &lt;value-param&gt;
            &lt;name&gt;class-name&lt;/name&gt;
            &lt;value&gt;javax.sql.DataSource&lt;/value&gt;
          &lt;/value-param&gt;
          &lt;value-param&gt;
            &lt;name&gt;factory&lt;/name&gt;
            &lt;value&gt;org.apache.commons.dbcp.BasicDataSourceFactory&lt;/value&gt;
          &lt;/value-param&gt;
          &lt;properties-param&gt;
            &lt;name&gt;ref-addresses&lt;/name&gt;
            &lt;description&gt;ref-addresses&lt;/description&gt;
            &lt;property name="driverClassName" value="org.hsqldb.jdbcDriver"/&gt;
            &lt;property name="url" value="jdbc:hsqldb:file:target/temp/data/portal"/&gt;
            &lt;property name="username" value="sa"/&gt;
            &lt;property name="password" value=""/&gt;
          &lt;/properties-param&gt;
        &lt;/init-params&gt;
      &lt;/component-plugin&gt;
      &lt;component-plugin&gt;
        &lt;name&gt;bind.datasource&lt;/name&gt;
        &lt;set-method&gt;addPlugin&lt;/set-method&gt;
        &lt;type&gt;org.exoplatform.services.naming.BindReferencePlugin&lt;/type&gt;
        &lt;init-params&gt;
          &lt;value-param&gt;
            &lt;name&gt;bind-name&lt;/name&gt;
            &lt;value&gt;jdbcjcr1&lt;/value&gt;
          &lt;/value-param&gt;
          &lt;value-param&gt;
            &lt;name&gt;class-name&lt;/name&gt;
            &lt;value&gt;javax.sql.DataSource&lt;/value&gt;
          &lt;/value-param&gt;
          &lt;value-param&gt;
            &lt;name&gt;factory&lt;/name&gt;
            &lt;value&gt;org.apache.commons.dbcp.BasicDataSourceFactory&lt;/value&gt;
          &lt;/value-param&gt;
          &lt;properties-param&gt;
            &lt;name&gt;ref-addresses&lt;/name&gt;
            &lt;description&gt;ref-addresses&lt;/description&gt;
            &lt;property name="driverClassName" value="com.mysql.jdbc.Driver"/&gt;
            &lt;property name="url" value="jdbc:mysql://exoua.dnsalias.net/jcr"/&gt;
            &lt;property name="username" value="exoadmin"/&gt;
            &lt;property name="password" value="exo12321"/&gt;
            &lt;property name="maxActive" value="50"/&gt;
            &lt;property name="maxIdle" value="5"/&gt;
            &lt;property name="initialSize" value="5"/&gt;
          &lt;/properties-param&gt;
        &lt;/init-params&gt;
      &lt;/component-plugin&gt;
    &lt;component-plugins&gt;
    &lt;init-params&gt;
      &lt;value-param&gt;
        &lt;name&gt;default-context-factory&lt;/name&gt;
        &lt;value&gt;org.exoplatform.services.naming.SimpleContextFactory&lt;/value&gt;
      &lt;/value-param&gt;
    &lt;/init-params&gt;
&lt;/component&gt;</programlisting>

    <para>Configure the database connection parameters:<itemizedlist>
        <listitem>
          <para><parameter>driverClassName</parameter>, e.g.
          "org.hsqldb.jdbcDriver", "com.mysql.jdbc.Driver",
          "org.postgresql.Driver"</para>
        </listitem>

        <listitem>
          <para><parameter>url</parameter>, e.g.
          "jdbc:hsqldb:file:target/temp/data/portal",
          "jdbc:mysql://exoua.dnsalias.net/jcr"</para>
        </listitem>

        <listitem>
          <para><parameter>username</parameter>, e.g. "sa", "exoadmin"</para>
        </listitem>

        <listitem>
          <para><parameter>password</parameter>, e.g. "", "exo12321"</para>
        </listitem>
      </itemizedlist></para>

    <para>There can be connection pool configuration parameters
    (org.apache.commons.dbcp.BasicDataSourceFactory):<itemizedlist>
        <listitem>
          <para><parameter>maxActive</parameter>, e.g. 50</para>
        </listitem>

        <listitem>
          <para><parameter>maxIdle</parameter>, e.g. 5</para>
        </listitem>

        <listitem>
          <para><parameter>initialSize</parameter>, e.g. 5</para>
        </listitem>

        <listitem>
          <para>and other according to <ulink
          url="http://jakarta.apache.org/commons/dbcp/configuration.html">Apache
          DBCP configuration</ulink></para>
        </listitem>
      </itemizedlist></para>

    <para>When the data container configuration is done, we can configure the
    repository service. Each workspace will be configured for its own data
    container.</para>

    <para>For example (two workspaces <parameter>ws</parameter> - jdbcjcr,
    <parameter>ws1</parameter> - jdbcjcr1):</para>

    <programlisting language="xml">&lt;workspaces&gt;
  &lt;workspace name="ws" auto-init-root-nodetype="nt:unstructured"&gt;
    &lt;container class="org.exoplatform.services.jcr.impl.storage.jdbc.JDBCWorkspaceDataContainer"&gt;
    &lt;properties&gt;
      &lt;property name="source-name" value="jdbcjcr"/&gt;
      &lt;property name="dialect" value="hsqldb"/&gt;
      &lt;property name="multi-db" value="true"/&gt;
      &lt;property name="max-buffer-size" value="200K"/&gt;
      &lt;property name="swap-directory" value="target/temp/swap/ws"/&gt;   
    &lt;/properties&gt;
    &lt;/container&gt;
    &lt;cache enabled="true"&gt;
      &lt;properties&gt;
        &lt;property name="max-size" value="10K"/&gt;&lt;!-- 10Kbytes --&gt;
        &lt;property name="live-time" value="30m"/&gt;&lt;!-- 30 min --&gt;
      &lt;/properties&gt;
    &lt;/cache&gt;
    &lt;query-handler class="org.exoplatform.services.jcr.impl.core.query.lucene.SearchIndex"&gt;
    &lt;properties&gt;
      &lt;property name="index-dir" value="target/temp/index"/&gt;
    &lt;/properties&gt;
    &lt;/query-handler&gt;
    &lt;lock-manager&gt;
    &lt;time-out&gt;15m&lt;/time-out&gt;&lt;!-- 15 min --&gt;
    &lt;persister class="org.exoplatform.services.jcr.impl.core.lock.FileSystemLockPersister"&gt;
      &lt;properties&gt;
      &lt;property name="path" value="target/temp/lock/ws"/&gt;
      &lt;/properties&gt;
    &lt;/persister&gt;
    &lt;/lock-manager&gt;
  &lt;/workspace&gt;
  &lt;workspace name="ws1" auto-init-root-nodetype="nt:unstructured"&gt;
    &lt;container class="org.exoplatform.services.jcr.impl.storage.jdbc.JDBCWorkspaceDataContainer"&gt;
    &lt;properties&gt;
      &lt;property name="source-name" value="jdbcjcr1"/&gt;
      &lt;property name="dialect" value="mysql"/&gt;
      &lt;property name="multi-db" value="true"/&gt;
      &lt;property name="max-buffer-size" value="200K"/&gt;
      &lt;property name="swap-directory" value="target/temp/swap/ws1"/&gt;   
    &lt;/properties&gt;
    &lt;/container&gt;
    &lt;cache enabled="true"&gt;
      &lt;properties&gt;
        &lt;property name="max-size" value="10K"/&gt;
        &lt;property name="live-time" value="5m"/&gt;
      &lt;/properties&gt;
    &lt;/cache&gt;
    &lt;query-handler class="org.exoplatform.services.jcr.impl.core.query.lucene.SearchIndex"&gt;
    &lt;properties&gt;
      &lt;property name="index-dir" value="target/temp/index"/&gt;
    &lt;/properties&gt;
    &lt;/query-handler&gt;
    &lt;lock-manager&gt;
    &lt;time-out&gt;15m&lt;/time-out&gt;&lt;!-- 15 min --&gt;
    &lt;persister class="org.exoplatform.services.jcr.impl.core.lock.FileSystemLockPersister"&gt;
      &lt;properties&gt;
      &lt;property name="path" value="target/temp/lock/ws1"/&gt;
      &lt;/properties&gt;
    &lt;/persister&gt;
    &lt;/lock-manager&gt;
  &lt;/workspace&gt;
&lt;/workspaces&gt;
</programlisting>

    <itemizedlist>
      <listitem>
        <para><parameter>source-name</parameter>: A javax.sql.DataSource name
        configured in InitialContextInitializer component.</para>
      </listitem>

      <listitem>
        <para><parameter>dialect</parameter>: A database dialect, one of
        "hsqldb", "mysql", "mysql-utf8", "pgsql", "oracle", "oracle-oci",
        "mssql", "sybase", "derby", "db2", "db2v8" or "auto" for dialect
        autodetection;</para>
      </listitem>

      <listitem>
        <para><parameter>multi-db</parameter>: Enable multi-database container
        with this parameter (set value "true");</para>
      </listitem>

      <listitem>
        <para><parameter>max-buffer-size: A</parameter> a threshold (in bytes)
        after which a javax.jcr. Value content will be swapped to a file in a
        temporary storage. For example: swap for pending changes.</para>
      </listitem>

      <listitem>
        <para><parameter>swap-directory</parameter>: A path in the file system
        used to swap the pending changes.</para>
      </listitem>
    </itemizedlist>

    <para>In this way, we have configured two workspace which will be
    persisted in two different databases (ws in HSQLDB, ws1 in MySQL).</para>

    <note>
      <para>The <link
      linkend="JCR.eXoJCRconfiguration">repository configuration</link>
      parameters supports human-readable formats of values (for example: 200K - 200
      Kbytes, 30m - 30 minutes, etc)</para>
    </note>
</section>
<!-- Single-database configuration -->

<section id="JCR.JDBCDataContainerConfig.Single-databaseConfiguration">
    <title>Single-database configuration</title>

    <para>It is simpler to configure a single-database data container. We
    have to configure one naming resource.</para>

    <para>For example (embedded mode for <parameter>jdbcjcr</parameter> data
    container):</para>

<programlisting language="xml">&lt;external-component-plugins&gt;
&lt;target-component&gt;org.exoplatform.services.naming.InitialContextInitializer&lt;/target-component&gt;
&lt;component-plugin&gt;
	&lt;name&gt;bind.datasource&lt;/name&gt;
	&lt;set-method&gt;addPlugin&lt;/set-method&gt;
	&lt;type&gt;org.exoplatform.services.naming.BindReferencePlugin&lt;/type&gt;
	&lt;init-params&gt;
	  &lt;value-param&gt;
		&lt;name&gt;bind-name&lt;/name&gt;
		&lt;value&gt;jdbcjcr&lt;/value&gt;
	  &lt;/value-param&gt;
	  &lt;value-param&gt;
		&lt;name&gt;class-name&lt;/name&gt;
		&lt;value&gt;javax.sql.DataSource&lt;/value&gt;
	  &lt;/value-param&gt;
	  &lt;value-param&gt;
		&lt;name&gt;factory&lt;/name&gt;
		&lt;value&gt;org.apache.commons.dbcp.BasicDataSourceFactory&lt;/value&gt;
	  &lt;/value-param&gt;
	  &lt;properties-param&gt;
		&lt;name&gt;ref-addresses&lt;/name&gt;
		&lt;description&gt;ref-addresses&lt;/description&gt;
		&lt;property name="driverClassName" value="org.postgresql.Driver"/&gt;
		&lt;property name="url" value="jdbc:postgresql://exoua.dnsalias.net/portal"/&gt;
		&lt;property name="username" value="exoadmin"/&gt;
		&lt;property name="password" value="exo12321"/&gt;
		&lt;property name="maxActive" value="50"/&gt;
		&lt;property name="maxIdle" value="5"/&gt;
		&lt;property name="initialSize" value="5"/&gt;
	  &lt;/properties-param&gt;
	&lt;/init-params&gt;
&lt;/component-plugin&gt;
&lt;/external-component-plugins&gt;</programlisting>

    <para>And configure repository workspaces in repositories configuration
    with this one database. Parameter "multi-db" must be switched off (set
    value "false").</para>

    <para>For example (two workspaces <parameter>ws</parameter> - jdbcjcr,
    <parameter>ws1</parameter> - jdbcjcr):</para>

    <programlisting language="xml">&lt;workspaces&gt;
  &lt;workspace name="ws" auto-init-root-nodetype="nt:unstructured"&gt;
    &lt;container class="org.exoplatform.services.jcr.impl.storage.jdbc.JDBCWorkspaceDataContainer"&gt;
    &lt;properties&gt;
      &lt;property name="source-name" value="jdbcjcr"/&gt;
      &lt;property name="dialect" value="pgsql"/&gt;
      &lt;property name="multi-db" value="false"/&gt;
      &lt;property name="max-buffer-size" value="200K"/&gt;
      &lt;property name="swap-directory" value="target/temp/swap/ws"/&gt;
    &lt;/properties&gt;
    &lt;/container&gt;
    &lt;cache enabled="true"&gt;
    &lt;properties&gt;
      &lt;property name="max-size" value="10K"/&gt;
      &lt;property name="live-time" value="30m"/&gt;
    &lt;/properties&gt;
    &lt;/cache&gt;
    &lt;query-handler class="org.exoplatform.services.jcr.impl.core.query.lucene.SearchIndex"&gt;
    &lt;properties&gt;
      &lt;property name="index-dir" value="../temp/index"/&gt;
    &lt;/properties&gt;
    &lt;/query-handler&gt;
    &lt;lock-manager&gt;
    &lt;time-out&gt;15m&lt;/time-out&gt;
    &lt;persister class="org.exoplatform.services.jcr.impl.core.lock.FileSystemLockPersister"&gt;
      &lt;properties&gt;
      &lt;property name="path" value="target/temp/lock/ws"/&gt;
      &lt;/properties&gt;
    &lt;/persister&gt;
    &lt;/lock-manager&gt;
  &lt;/workspace&gt;
  &lt;workspace name="ws1" auto-init-root-nodetype="nt:unstructured"&gt;
    &lt;container class="org.exoplatform.services.jcr.impl.storage.jdbc.JDBCWorkspaceDataContainer"&gt;
    &lt;properties&gt;
      &lt;property name="source-name" value="jdbcjcr"/&gt;
      &lt;property name="dialect" value="pgsql"/&gt;
      &lt;property name="multi-db" value="false"/&gt;
      &lt;property name="max-buffer-size" value="200K"/&gt;
      &lt;property name="swap-directory" value="target/temp/swap/ws1"/&gt;
    &lt;/properties&gt;
    &lt;/container&gt;
    &lt;cache enabled="true"&gt;
    &lt;properties&gt;
      &lt;property name="max-size" value="10K"/&gt;
      &lt;property name="live-time" value="5m"/&gt;
    &lt;/properties&gt;
    &lt;/cache&gt;
    &lt;lock-manager&gt;
    &lt;time-out&gt;15m&lt;/time-out&gt;
    &lt;persister class="org.exoplatform.services.jcr.impl.core.lock.FileSystemLockPersister"&gt;
      &lt;properties&gt;
      &lt;property name="path" value="target/temp/lock/ws1"/&gt;
      &lt;/properties&gt;
    &lt;/persister&gt;
    &lt;/lock-manager&gt;
  &lt;/workspace&gt;
&lt;/workspaces&gt;
</programlisting>

    <para>In this way, you have configured two workspaces which will be
    persisted in one database (PostgreSQL).</para>

    <para id="JCR.JDBCDataContainerConfig.Single-databaseConfiguration.ConfigurationWithoutDataSource">
      <citetitle><emphasis role="bold">Configuration without DataSource</emphasis></citetitle>
    </para>

      <para>Repository configuration without using the <classname>javax.sql.DataSource</classname> bounded in JNDI.</para>

      <para>This case may be usable if you have a dedicated JDBC driver
      implementation with special features like XA transactions,
      statements/connections pooling and so on:<itemizedlist>
          <listitem>
            <para>Remove the configuration in
            <classname>InitialContextInitializer</classname> for your database
            and configure a new one directly in the workspace
            container.</para>
          </listitem>

          <listitem>
            <para>Remove parameter "source-name" and add next lines instead.
            Describe your values for a JDBC driver, database URL and
            username.</para>
          </listitem>
        </itemizedlist></para>

      <note>
        <para>Be careful in the case JDBC driver should be implemented and
        provide connection pooling. Connection pooling is very recommended for
        using with JCR to prevent a database overload.</para>
      </note>

<programlisting language="xml">&lt;workspace name="ws" auto-init-root-nodetype="nt:unstructured"&gt;
&lt;container class="org.exoplatform.services.jcr.impl.storage.jdbc.JDBCWorkspaceDataContainer"&gt;
&lt;properties&gt;
  &lt;property name="dialect" value="hsqldb"/&gt;
  &lt;property name="driverClassName" value="org.hsqldb.jdbcDriver"/&gt;
  &lt;property name="url" value="jdbc:hsqldb:file:target/temp/data/portal"/&gt;
  &lt;property name="username" value="su"/&gt;
  &lt;property name="password" value=""/&gt; 
......</programlisting>

  </section>
</section>