<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
        "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section id="JCR.FAQ.WebDAV">
  <title>Frequently asked questions</title>

  <qandaset>
  <qandaentry xml:id="JCR.FAQ.JCR.WebDAV.ManageCacheControlValue" >
    <question>
      <para>
          <emphasis role="bold">Can I manage the '<parameter>cache-control</parameter>' value for different media-types
            from server configuration?
          </emphasis>
      </para>
    </question>
    <answer>
      <para>Use the "<parameter>cache-control</parameter>" configuration parameter.</para>

      <para>The value of this parameter must contain colon-separated pairs of the
        "<parameter>MediaType:cache-control</parameter>" value.
      </para>

      <para>For example, if you need to cache all text/xml and text/plain
        files for 5 minutes (300 sec.) and other text/\* files for 10 minutes
        (600 sec.), use the next configuration:
      </para>

<programlisting language="xml">&lt;component&gt;
	&lt;type&gt;org.exoplatform.services.jcr.webdav.WebDavServiceImpl&lt;/type&gt;
	&lt;init-params&gt;
		&lt;value-param&gt;
			&lt;name&gt;cache-control&lt;/name&gt;
			&lt;value&gt;text/xml,text/plain:max-age=300;text/*:max-age=600;&lt;/value&gt;
		&lt;/value-param&gt;
	&lt;init-params&gt;
&lt;component&gt;</programlisting>
    </answer>
  </qandaentry>

  <qandaentry xml:id="JCR.FAQ.JCR.WebDAV.PerformWebDAVRequestsUsingCurl">
    <question>
      <para>
          <emphasis role="bold">How to perform WebDAV requests using curl?</emphasis>
      </para>
    </question>
    <answer>
      <para><emphasis role="bold">Simple Requests</emphasis>:</para>

      <para>For simple requests, such as GET, HEAD, MKCOL, COPY, MOVE,
        DELETE, CHECKIN, CHECKOUT, UNCHECKOUT, LOCK, UNLOCK, VERSIONCONTROL, and
        OPTIONS, perform:
      </para>
      <programlisting>curl -i -u 'user:pass' -X 'METHOD_NAME' 'resource_url'</programlisting>

      <para>For example, to create a folder named "<emphasis>test</emphasis>", perform as follows:</para>

      <programlisting>curl -i -u 'root:exo' -X MKCOL 'http://localhost:8080/rest/jcr/repository/production/test
      </programlisting>

      <para>To PUT the <filename>test.txt</filename> file from your current folder to the "<emphasis>test</emphasis>" folder
        on the server, perform as follows:
      </para>

      <programlisting>curl -i -u 'root:exo' -X PUT 'http://localhost:8080/rest/jcr/repository/production/test/test.txt'
        -d
        @test.txt
      </programlisting>

      <para><emphasis role="bold">Requests with XML body</emphasis>: </para>

      <para>For requests which contain the XML body, such as ORDER, PROPFIND,
        PROPPATCH, REPORT, and SEARCH, add
        <emphasis role="bold">-d 'xml_body text'</emphasis>
        or
        <emphasis role="bold">-d @body.xml</emphasis> to your
        curl-command:
      </para>

      <programlisting>curl -i -u 'user:pass' -X 'METHOD_NAME' -H 'Headers' 'resource_url' -d 'xml_body text'
      </programlisting>
      <note><para><filename>body.xml</filename> must contain a valid xml request body.</para></note>

      <para>For example, to find all files containing "test", perform as follows:
      </para>

      <programlisting>curl -i -u "root:exo" -X "SEARCH" "http://192.168.0.7:8080/rest/jcr/repository/production/" -d
        "&lt;?xml version='1.0' encoding='UTF-8' ?&gt;
        &lt;D:searchrequest xmlns:D='DAV:'&gt;
        &lt;D:sql&gt;SELECT * FROM nt:base WHERE contains(*, 'text')&lt;/D:sql&gt;
        &lt;/D:searchrequest&gt;"
      </programlisting>

      <para>If you need to add some headers to your request, use <emphasis role="bold">\-H</emphasis>
        key.
      </para>

      <para>To have more information about methods parameters, you can find
        in
        <ulink url="http://www.ietf.org/rfc/rfc2518.txt">HTTP Extensions
          for Distributed Authoring
        </ulink>
        specification.
      </para>
    </answer>
  </qandaentry>

  <qandaentry xml:id="JCR.FAQ.JCR.WebDAV.eXoJCRWebDAVServerTreatsContentEncoding">
    <question>
      <para>
          <emphasis role="bold">How eXo JCR WebDAV server treats content encoding?</emphasis>
      </para>
    </question>
    <answer>
      <para>OS client (Windows, Linux, and more) does not set an encoding in a
        request, but the JCR WebDAV server looks for an encoding in a
        <emphasis>Content-Type</emphasis> header and set it to <emphasis>jcr:encoding</emphasis>. See
        <ulink url="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html">
          http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html
        </ulink>
        14.17 Content-Type (e.g. Content-Type: text/html; charset=ISO-8859-4).
        So, if a client sets the <emphasis>Content-Type</emphasis> header, for example, <emphasis>JS code</emphasis> from a
        page, it will work for a text file as expected.
      </para>

      <para>If WebDAV request does not contain a content encoding, it is
        possible to write a dedicated action in a customer application. The
        action will set <emphasis>jcr:encoding</emphasis> using its own logic, for example, based on IP or
        user preferences.
      </para>
    </answer>
  </qandaentry>
 </qandaset>
</section>
