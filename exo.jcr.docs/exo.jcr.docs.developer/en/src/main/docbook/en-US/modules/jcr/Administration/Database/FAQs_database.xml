<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
        "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section id="JCR.FAQ.Database" role="NotInToc">
  <title>Frequently asked questions</title>

  <qandaset>
	<qandaentry xml:id="JCR.FAQ.JCR.Core.WhichDatabaseServerBetterForeXoJCR">
      <question>
        <para><emphasis role="bold">Which database server is better for eXo JCR?</emphasis></para>
      </question>
      <answer>
        <para>If the question is a performance, it is difficult question, as
          each database can be configured to be more (and more) faster for each
          special case. MySQL with MyISAM engine will be faster. But MySQL has
          limitations for indexes for multilingual columns (Item names
          actually). So, with long Item names (larger ofOracle or PostgreSQL
          also are good for performance. DB2 and MSSQL are slower in default
          configurations. Default configuration of Sybase leader of slowness.
          But in this question, take the database server maintenance into account.
          MySQL and PostgreSQL are simple in installation and can work even on
          limited hardware. Oracle, DB2, MSSQL or Sybase need more efforts. The
          same actual for maintenance during the work. Note for Sybase:
          "check-sns-new-connection" data container configuration parameter
          should be set to "true". For testing purpose, embedded database such
          as HSQLDB is the best choice. Apache Derby and H2 also supported. But
          H2 surprisingly needs "beta" feature enabled - MVCC=TRUE in JDBC
          url.
        </para>
      </answer>
    </qandaentry>
	
	<qandaentry xml:id="JCR.FAQ.JCR.Core.HowToSetUpeXoJCRForMutilingialContentOnMySQL">
        <question>
		  <para><emphasis role="bold">How to setup eXo JCR for mutilingial content on MySQL?</emphasis></para>
        </question>
        <answer>
          <para>To allow multiple character sets to be sent from the client, the
            UTF-8 encoding should be used, either by configuring utf8 as the
            default server character set, or by configuring the JDBC driver to use
            UTF-8 through the characterEncoding property. MySQL database should be
            created in single-byte encoding, e.g. "latin1":
          </para>

          <programlisting>CREATE DATABASE db1 CHARACTER SET latin1 COLLATE latin1_general_cs;</programlisting>

          <para>eXo JCR application (e.g. GateIn) should use JCR dialect
            "MySQL-UTF8".
          </para>

          <para>In other words: MySQL database default encoding and JCR dialect
            cannot be UTF8 both. Use single-byte encoding (e.g. "latin1") for
            database and "mysql-utf8" dialect for eXo JCR.
          </para>

          <para>Notice: "MySQL-UTF8" dialect cannot be auto-detected, it should
            be set explicitly in configuration.
          </para>
        </answer>
    </qandaentry>
	<qandaentry xml:id="JCR.FAQ.JCR.Core.LimitationMySQLAffectingOneXoJCRFeatures">
        <question>
		  <para><emphasis role="bold">Does MySQL have limitation affecting on eXo JCR features?</emphasis></para>
        </question>
        <answer>
          <para>Index's key length of JCR_SITEM (JCR_MITEM) table for mysql-utf8
            dialect is reduced to 765 bytes (or 255 chars).
          </para>
        </answer>
    </qandaentry>
	<qandaentry xml:id="JCR.FAQ.JCR.Core.SybaseDatabaseNeedSpecialOptionsIneXoJCRconfiguration">
        <question>
		  <para><emphasis role="bold">Does use of Sybase database need special options in eXo JCR configuration?</emphasis></para>
        </question>
        <answer>
          <para>To enable JCR working properly with Sybase, a property
            'check-sns-new-connection' with 'false' value is required for each
            workspace data container:
          </para>
<programlisting language="xml">&lt;container class="org.exoplatform.services.jcr.impl.storage.jdbc.optimisation.CQJDBCWorkspaceDataContainer"&gt;
	&lt;properties&gt;
		&lt;property name="source-name" value="jdbcjcr" /&gt;
		&lt;property name="dialect" value="auto" /&gt;
		&lt;property name="multi-db" value="true" /&gt;
		&lt;property name="update-storage" value="false" /&gt;
		&lt;property name="max-buffer-size" value="200k" /&gt;
		&lt;property name="swap-directory" value="target/temp/swap/ws" /&gt;
		&lt;property name="swap-directory" value="target/temp/swap/ws" /&gt;
		&lt;property name="check-sns-new-connection" value="false" /&gt;
	&lt;/properties&gt;</programlisting>
        </answer>
    </qandaentry>

	<qandaentry xml:id="JCR.FAQ.JCR.Core.UseQueriesToAccessDataByJCRAPI">
      <question>
		<para><emphasis role="bold">Is it better to use queries that to access the data by the JCR API?</emphasis></para>
      </question>
      <answer>
        <para>No, direct access to items via JCR API is more efficient. Search
          will consume additional resources for index querying and only then
          return the items.
        </para>
      </answer>
    </qandaentry>

	<qandaentry xml:id="JCR.FAQ.JCR.Core.OrderingByjcr:path_ItemNameSupported">
      <question>
		<para><emphasis role="bold">Is ordering by jcr:path or Item name supported?</emphasis></para>
      </question>
      <answer>
        <para>No, it is not supported. There are two ways to order
          results, when the path may be used as criteria:
        </para>
        <itemizedlist>
          <listitem>
            <para>Order by property with the NAME or PATH value type (JCR supports
              it).
            </para>
          </listitem>

          <listitem>
            <para>Order by jcr:path - sort by the exact path of node (JCR do not
              support it).
            </para>
          </listitem>
        </itemizedlist>
        <para>Order by jcr:path</para>
        <para>If no order specification is supplied in the query statement,
          implementations may support document order on the result nodes (see
          6.6.4.2 Document Order of <ulink url="http://jcp.org/en/jsr/detail?id=170">JSR-170</ulink>), and it is sorted by order number.
        </para>
        <para>By default, (if query does not contain any ordering statements)
          result nodes are sorted by the document order.
        </para>
        <programlisting>SELECT * FROM nt:unstructured WHERE jcr:path LIKE 'testRoot/%'</programlisting>
        <para>For specified jcr:path ordering, there is different proceeding in
          XPath and SQL:
        </para>
        <itemizedlist>
          <listitem>
            <para>SQL no matter ascending or descending - query returns result
              nodes in random order:</para>
            <programlisting>SELECT * FROM nt:unstructured WHERE
              jcr:path LIKE 'testRoot/%' ORDER BY jcr:path</programlisting>
          </listitem>
        </itemizedlist>
        <itemizedlist>
          <listitem>
            <para>XPath - jcr:path order construction is ignored (so result is
              not sorted according to the path):</para>
            <programlisting>/testRoot/*
              <ulink
                      url="@jcr:primaryType='nt:unstructured'">@jcr:primaryType='nt:unstructured'
              </ulink>
              order by jcr:path</programlisting>
          </listitem>
        </itemizedlist>
      </answer>
    </qandaentry>
   </qandaset>
</section>
	
	

	