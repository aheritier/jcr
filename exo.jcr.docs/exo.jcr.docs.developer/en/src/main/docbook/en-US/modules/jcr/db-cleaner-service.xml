<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="JCR.DBCleanerService">
  <?dbhtml filename="ch-db-cleaner-service.html"?>

  <title>DBCleanerService</title>

  <section>
    <title>API</title>

    <para>It is special service for removing data from database.</para>

    <note>
      <para>Code that invokes methods of DBCleanerService must have
      JCRRuntimePermissions.MANAGE_REPOSITORY_PERMISSION permission;</para>
    </note>

    <para>There are two methods of DBCleanerService:</para>

    <table>
      <title>API</title>

      <tgroup cols="2">
        <tbody>
          <row>
            <entry>public void cleanWorkspaceData(WorkspaceEntry
            wsEntry)</entry>

            <entry>Clean workspace data from database. Tables will be removed
            in case of multiDB, and only records will be removed in case of
            singleDB.</entry>
          </row>

          <row>
            <entry>public void cleanRepositoryData(RepositoryEntry
            repoEntry)</entry>

            <entry>Cleanup repository data from database.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>

  <section>
    <title>How it works</title>

    <para>cleanRepositoryData takes workspaces configs from RepositoryEntry
    and clean each workspace using cleanWorkspaceData method.</para>

    <para>Lets see cleanWorkspaceData in detail:<itemizedlist>
        <listitem>
          <para>at first, it resolves container name (workspace name),
          database dialect, data source and isMultiDB parameter;</para>
        </listitem>

        <listitem>
          <para>then based on database dialect creates instanse of database
          cleaner (implements DBCleaner interface) and invokes clean()
          method;</para>
        </listitem>
      </itemizedlist></para>
  </section>

  <section>
    <title>Scripts in detail</title>

    <para>Single and Multi DB scripts examples</para>

    <para>In case of isMultiDB="true", will use:</para>

    <programlisting>DROP TABLE JCR_MREF;
DROP TABLE JCR_MVALUE;
DROP TABLE JCR_MITEM;</programlisting>

    <para>In case of isMultiDB="false", will use:</para>

    <programlisting>delete from JCR_SVALUE where exists(select * from JCR_SITEM where JCR_SITEM.ID=JCR_SVALUE.PROPERTY_ID and JCR_SITEM.CONTAINER_NAME=?);
delete from JCR_SREF where exists(select * from JCR_SITEM where JCR_SITEM.ID=JCR_SREF.PROPERTY_ID and JCR_SITEM.CONTAINER_NAME=?);
delete from JCR_SITEM where CONTAINER_NAME=?;</programlisting>

    <note>
      <para>"?" will be replased with container name on execution.</para>
    </note>

    <para>But some database do not support cascade delete or need special
    sittings, so query "delete from JCR_SITEM where CONTAINER_NAME=?" may
    causes constraint violation exception. In such case will be used deleting
    like visitor does. First traverse to the bottom of the tree and then go up
    to the root and perform deleting children. </para>
  </section>
</chapter>
