<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<section id="JCR.PropertyExistenceConstraint">
  <title>Property existence constraint</title>

  <para>Find all nodes with the 'mix:title' mixin type  where the 'jcr:description' property
  does not exist (is null).</para>

  <para xml:id="JCR.PropertyExistenceConstraint.RepositoryStructure">
    <citetitle>
      <emphasis role="bold">Repository structure</emphasis>
    </citetitle>
  </para>

    <para>The repository contains mix:title nodes, in one of these nodes the
    jcr:description property is null.</para>

    <itemizedlist>
      <listitem>
        <para>root</para>

        <itemizedlist>
          <listitem>
            <para>document1 (mix:title) jcr:title="Star wars"
            jcr:description="Dart rules!!"</para>
          </listitem>

          <listitem>
            <para>document2 (mix:title) jcr:title="Prison break"
            jcr:description="Run, Forest, run ))"</para>
          </listitem>

          <listitem>
            <para>document3 (mix:title) jcr:title="Titanic" // The description
            property does not exist. This is the node we wish to find.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>

  <para xml:id="JCR.PropertyExistenceConstraint.QueryExecution">
    <citetitle>
      <emphasis role="bold">Query execution</emphasis>
    </citetitle>
  </para>

  <itemizedlist>
    <listitem>
      <para>
        <emphasis role="bold">SQL</emphasis>
      </para>

      <programlisting language="java">// make SQL query
QueryManager queryManager = workspace.getQueryManager();
// create query
String sqlStatement = "SELECT * FROM mix:title WHERE jcr:description IS NULL";
Query query = queryManager.createQuery(sqlStatement, Query.SQL);
// execute query and fetch result
QueryResult result = query.execute();</programlisting>
    </listitem>
    <listitem>
      <para>
        <emphasis role="bold">XPath</emphasis>
      </para>

      <programlisting language="java">// make XPath query
QueryManager queryManager = workspace.getQueryManager();
// create query
String xpathStatement = ""//element(*,mix:title)[not(@jcr:description)]"";
Query query = queryManager.createQuery(xpathStatement, Query.XPATH);
// execute query and fetch result
QueryResult result = query.execute();</programlisting>
    </listitem>
  </itemizedlist>
  <para xml:id="JCR.PropertyExistenceConstraint.FetchingResult">
    <citetitle>
      <emphasis role="bold">Fetching result</emphasis>
    </citetitle>
  </para>

  <para>Let's get nodes:</para>

    <programlisting language="java">NodeIterator it = result.getNodes();

if(it.hasNext())
{
   Node findedNode = it.nextNode();
}</programlisting>

    <para>NodeIterator will return "document3".</para>

    <para>We can also get a table:</para>

    <programlisting language="java">String[] columnNames = result.getColumnNames();
RowIterator rit = result.getRows();
while (rit.hasNext())
{
   Row row = rit.nextRow();
   // get values of the row
   Value[] values = row.getValues();
}</programlisting>

    <para>Table content is: <table>
        <title>Table content</title>

        <tgroup cols="4">
          <thead>
            <row>
              <entry>jcr:title</entry>

              <entry>jcr:description</entry>

              <entry>jcr:path</entry>

              <entry>jcr:score</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>Titanic</entry>

              <entry>null</entry>

              <entry>/document3</entry>

              <entry>1947</entry>
            </row>
          </tbody>
        </tgroup>
      </table></para>
</section>
