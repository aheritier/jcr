<?xml version="1.0" encoding="UTF-8"?>
<!-- This document was created with Syntext Serna Free. -->
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<!-- 2.2.4 Configuring eXo JCR in cluster -->
<section id="JCR.ClusterConfig" role="NotInToc">
  <title>Configure JCR in cluster</title>
    <para id="JCR.ClusterConfig.Requirements.Environment_Requirements">
      <citetitle><emphasis role="bold">Environment requirements</emphasis></citetitle>
    </para>
      <itemizedlist>
        <listitem>
            AAny dedicated RDBMS like MySQL, Postges, Oracle but just not HSSQL.
        </listitem>
        <listitem>
            Shared storage. The simplest thing is to use shared FS like NFS or SMB mounted in operation system, but they are rather slow.
            The best thing is to use SAN (Storage Area Network).
        </listitem>
        <listitem>
            Fast network between JCR nodes.
        </listitem>
        <listitem>
          <para>Every node of cluster MUST have the same mounted Network File
          System with the read and write permissions on it.</para>

          <para>"/mnt/tornado" - path to the mounted Network File System (all
          cluster nodes must use the same NFS).</para>
        </listitem>

        <listitem>
          <para>Every node of cluster MUST use the same database.</para>
        </listitem>

        <listitem>
          <para>The same clusters on different nodes MUST have the same names
          (for example, if Indexer cluster in workspace production on the first node
          has the name "production_indexer_cluster", then indexer clusters in
          workspace production on all other nodes MUST have the same name
          "production_indexer_cluster" ).</para>
        </listitem>
        <listitem>
           <para>
               JBossTS Transaction Service and JBossCache Transaction Manager are used. This can be checked via
               <filename>exo-configuration.xml</filename> as bellow:
           </para>
            <programlisting language="xml">&lt;component&gt;
&lt;key&gt;org.jboss.cache.transaction.TransactionManagerLookup&lt;/key&gt;
&lt;type&gt;org.jboss.cache.GenericTransactionManagerLookup&lt;/type&gt;
&lt;/component&gt;

&lt;component&gt;
    &lt;key&gt;org.exoplatform.services.transaction.TransactionService&lt;/key&gt;
    &lt;type&gt;org.exoplatform.services.transaction.jbosscache.JBossTransactionsService&lt;/type&gt;
    &lt;init-params&gt;
    &lt;value-param&gt;
    &lt;name&gt;timeout&lt;/name&gt;
    &lt;value&gt;300&lt;/value&gt;
    &lt;/value-param&gt;
    &lt;/init-params&gt;
&lt;/component&gt;
            </programlisting>
        </listitem>


      </itemizedlist>    

    <para id="JCR.ClusterConfig.Requirements.Configuration_Requirements">
      <citetitle><emphasis role="bold">Configuration requirements</emphasis></citetitle>
    </para>
      <para>Configuration of every workspace in repository must contain the following parts:</para>

  <itemizedlist>
    <listitem id="conf_value_storage">
      <para>
        <emphasis role="bold">Value Storage configuration:</emphasis>
      </para>
      <programlistingco>
      <areaspec>
        <area coords="4" id="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.path"/>
      </areaspec>
<programlisting language="xml">&lt;value-storages&gt;
   &lt;value-storage id="system" class="org.exoplatform.services.jcr.impl.storage.value.fs.TreeFileValueStorage"&gt;
      &lt;properties&gt;
         &lt;property name="path" value="/mnt/tornado/temp/values/production" /&gt;    
      &lt;/properties&gt;
      &lt;filters&gt;
         &lt;filter property-type="Binary" /&gt;
      &lt;/filters&gt;
   &lt;/value-storage&gt;
&lt;/value-storages&gt;</programlisting>
        <calloutlist>
          <callout arearefs="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.path">
           <para><parameter>Path:</parameter> Path within NFS where ValueStorage will hold its data.</para>
          </callout>
        </calloutlist>
      </programlistingco>
      </listitem>

        <listitem id="conf_cache">
          <para><emphasis role="bold">Cache configuration:</emphasis></para>
<programlistingco>
  <areaspec>
    <area coords="3" id="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jbosscache-configuration"/>
    <area coords="4" id="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jgroups-configuration"/>
    <area coords="5" id="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jbosscache-cluster-name"/>
    <area coords="6" id="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jgroups-multiplexer-stack"/>
     <area coords="7" id="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jbosscache-shareable"/>
  </areaspec>
<programlisting language="xml">&lt;cache enabled="true" class="org.exoplatform.services.jcr.impl.dataflow.persistent.jbosscache.JBossCacheWorkspaceStorageCache"&gt;
   &lt;properties&gt;
      &lt;property name="jbosscache-configuration" value="jar:/conf/portal/test-jbosscache-data.xml" /&gt;     
      &lt;property name="jgroups-configuration" value="jar:/conf/portal/udp-mux.xml" /&gt;                     
      &lt;property name="jbosscache-cluster-name" value="JCR_Cluster_cache" /&gt;                              
      &lt;property name="jgroups-multiplexer-stack" value="false" /&gt;
      &lt;property name="jbosscache-shareable" value="true" /&gt;
   &lt;/properties&gt;
&lt;/cache&gt;</programlisting>
  <calloutlist>
    <callout arearefs="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jbosscache-configuration">
      <para><parameter>jbosscache-configuration</parameter>: Path to the configuration template.
      </para>
    </callout>
    <callout arearefs="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jgroups-configuration">
      <para><parameter>jgroups-configuration</parameter>: Path to JGroups configuration
        that should not be anymore jgroups' stack definitions but a
        normal jgroups configuration format with the shared transport
        configured by simply setting the  <parameter>singleton_name</parameter> jgroups property
        to a unique name (it must remain unique from
        one portal container to another). This file is also
        pre-bundled with templates and is recommended for use.
      </para>
    </callout>
    <callout arearefs="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jbosscache-cluster-name">
      <para><parameter>jgroups-multiplexer-stack</parameter>: Set to "false" in order to
        disable the multiplexer stack as now it is recommended to use
        the JGroups' shared transport instead.
      </para>
    </callout>
    <callout arearefs="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jgroups-multiplexer-stack">
      <para><parameter>jbosscache-cluster-name</parameter>: Name of cluster group.
        It should be different for each workspace and each workspace
        component. For example: <parameter> &lt;repository_name&gt;-&lt;ws_name&gt;-&lt;component(cache\|lock\|index)&gt;</parameter>.
      </para>
    </callout>
    <callout arearefs="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jbosscache-shareable">
      <para><parameter>jbosscache-shareable</parameter>: Set to "true" in order to share the
        same JBoss Cache instance between several workspaces.
      </para>
    </callout>
  </calloutlist>
</programlistingco>
        </listitem>

        <listitem id="conf_indexer">
          <para><emphasis role="bold">Indexer configuration:</emphasis></para>
          <para>You must replace or add to the <parameter>&lt;query-handler&gt;</parameter> block,
                the <parameter>changesfilter-class</parameter> parameter equals with:
          </para>
          <programlisting language="xml">&lt;property name="changesfilter-class" value="org.exoplatform.services.jcr.impl.core.query.jbosscache.JBossCacheIndexChangesFilter"/&gt;</programlisting>
          <para>Then, add the JBossCache-oriented configuration. The configuration  should look like: </para>
<programlistingco>
        <areaspec>
          <area coords="4" id="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.index-dir"/>
          <area coords="5" id="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jbosscache-configuration"/>
          <area coords="6" id="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jgroups-configuration"/>
          <area coords="7" id="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jbosscache-cluster-name"/>
          <area coords="8" id="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.max-volatile-time"/>
          </areaspec>
<programlisting language="xml">&lt;query-handler class="org.exoplatform.services.jcr.impl.core.query.lucene.SearchIndex"&gt;
   &lt;properties&gt;
      &lt;property name="changesfilter-class" value="org.exoplatform.services.jcr.impl.core.query.jbosscache.JBossCacheIndexChangesFilter" /&gt;
      &lt;property name="index-dir" value="/mnt/tornado/temp/jcrlucenedb/production" /&gt;                       
      &lt;property name="jbosscache-configuration" value="jar:/conf/portal/test-jbosscache-indexer.xml" /&gt;    
      &lt;property name="jgroups-configuration" value="jar:/conf/portal/udp-mux.xml" /&gt;                       
      &lt;property name="jbosscache-cluster-name" value="JCR_Cluster_indexer" /&gt;                              
      &lt;property name="jgroups-multiplexer-stack" value="false" /&gt;
      &lt;property name="jbosscache-shareable" value="true" /&gt;
      &lt;property name="max-volatile-time" value="60" /&gt;
   &lt;/properties&gt;
&lt;/query-handler&gt; </programlisting>
          <calloutlist>
            <callout arearefs="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.index-dir">
             <para><parameter>index-dir</parameter>: Path within NFS where ValueStorage will hold its data.</para>
            </callout>
            <callout arearefs="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jbosscache-configuration">
              <para><parameter>jboss-cache-configuration</parameter>: Path to the JBoss Cache configuration for indexer.</para>
            </callout>
            <callout arearefs="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jgroups-configuration">
              <para><parameter>jgroups-configuration</parameter>: Path to the JGroups configuration.</para>
            </callout>
            <callout arearefs="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.jbosscache-cluster-name">
               <para><parameter>jboss-cache-cluster-name</parameter>: JBoss Cache indexer cluster name.</para>
            </callout>
            <callout arearefs="area-JCR.ClusterConfig.Requirements.Configuration_Requirements.max-volatile-time">
               <para><parameter>max-volatile-time</parameter>: Indicate that the latest changes in
                  index will be visible for each cluster node not later than in a specific time (for example, the volatile time is set to 60s in this configuration). This property is not mandatory but recommended.
                  </para>
            </callout>
          </calloutlist>
          </programlistingco>
            <para>These properties have the same meaning and restrictions as in
                the previous code block except the last one <parameter>max-volatile-time</parameter>.
            </para>
        </listitem>

    <listitem id="conf_lock_manager">
      <para>
        <emphasis role="bold">Lock Manager configuration:</emphasis>
      </para>
      <para>
        This may be the hardest element to configure, because you have to define access to the database where locks will
        be stored.
        Replace the existing lock-manager with configuration shown below:
      </para>
      <programlistingco>
        <areaspec>
          <area coords="4" id="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-configuration"/>
          <area coords="5" id="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jgroups-configuration"/>
          <area coords="6" id="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cluster-name"/>
          <area coords="7"
                id="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.table.name"/>
          <area coords="8"
                id="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.table.create"/>
          <area coords="9"
                id="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.table.drop"/>
          <area coords="10"
                id="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.table.primarykey"/>
          <area coords="11"
                id="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.fqn.column"/>
          <area coords="12"
                id="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.node.column"/>
          <area coords="13"
                id="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.parent.column"/>
          <area coords="14"
                id="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.datasource"/>
        </areaspec>
<programlisting language="xml">&lt;lock-manager class="org.exoplatform.services.jcr.impl.core.lock.jbosscache.CacheableLockManagerImpl"&gt;
   &lt;properties&gt;
      &lt;property name="time-out" value="15m" /&gt;
      &lt;property name="jbosscache-configuration" value="jar:/conf/portal/test-jbosscache-lock.xml" /&gt;       
      &lt;property name="jgroups-configuration" value="jar:/conf/portal/udp-mux.xml" /&gt;                       
      &lt;property name="jbosscache-cluster-name" value="JCR_Cluster_locks" /&gt;                                
      &lt;property name="jbosscache-cl-cache.jdbc.table.name" value="jcrlocks"/&gt;                              
      &lt;property name="jbosscache-cl-cache.jdbc.table.create" value="true"/&gt;
      &lt;property name="jbosscache-cl-cache.jdbc.table.drop" value="false"/&gt;
      &lt;property name="jbosscache-cl-cache.jdbc.table.primarykey" value="jcrlocks_pk"/&gt;
      &lt;property name="jbosscache-cl-cache.jdbc.fqn.column" value="fqn"/&gt;
      &lt;property name="jbosscache-cl-cache.jdbc.node.column" value="node"/&gt;
      &lt;property name="jbosscache-cl-cache.jdbc.parent.column" value="parent"/&gt;
      &lt;property name="jbosscache-cl-cache.jdbc.datasource" value="jdbcjcr"/&gt;
      &lt;property name="jgroups-multiplexer-stack" value="false" /&gt;
      &lt;property name="jbosscache-shareable" value="true" /&gt;
   &lt;/properties&gt;
&lt;/lock-manager&gt;</programlisting>
            <calloutlist>
              <callout arearefs="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-configuration">
                <para><parameter>jboss-cache-configuration</parameter>: Path to the JBoss Cache configuration for lock
                  manager.
                </para>
              </callout>
              <callout arearefs="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jgroups-configuration">
                <para><parameter>jgroups-configuration</parameter>: Path to the JGroups configuration.
                </para>
              </callout>
              <callout arearefs="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cluster-name">
                <para><parameter>jboss-cache-cluster-name</parameter>: JBoss Cache locks cluster name.
                </para>
              </callout>
              <callout
                      arearefs="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.table.name">
                <para><parameter>jbosscache-cl-cache.jdbc.table.name</parameter>: Name of the DB table where lock's data
                  will be stored.
                </para>
              </callout>
              <callout
                      arearefs="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.table.create">
                <para><parameter>jbosscache-cl-cache.jdbc.table.create</parameter>: Whether to create it or not. Usually
                  set to "true".
                </para>
              </callout>
              <callout
                      arearefs="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.table.drop">
                <para><parameter>jbosscache-cl-cache.jdbc.table.drop</parameter>: Whether to drop on a start or not. Use
                  "false".
                </para>
              </callout>
              <callout
                      arearefs="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.table.primarykey">
                <para><parameter>jbosscache-cl-cache.jdbc.table.primarykey</parameter>: Name of column with pk.
                </para>
              </callout>
              <callout
                      arearefs="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.fqn.column">
                <para><parameter>jbosscache-cl-cache.jdbc.fqn.column</parameter>: Name of one
                  more column. If you are not sure how to use, follow the
                  example above (if much interested, please refer to JBossCache
                  JDBCCacheLoader documentation).
                </para>
              </callout>
              <callout
                      arearefs="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.node.column">
                <para><parameter>jbosscache-cl-cache.jdbc.node.column</parameter>: Name of one
                  more column. If you are not sure how to use, follow the
                  example above (if much interested, please refer to JBossCache
                  JDBCCacheLoader documentation).
                </para>
              </callout>
              <callout
                      arearefs="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.parent.column">
                <para><parameter>jbosscache-cl-cache.jdbc.parent.column</parameter>: Name of one
                  more column. If you are not sure how to use, follow the
                  example above if you are not sure (if much interested, please
                  refer to JBossCache JDBCCacheLoader documentation)
                </para>
              </callout>
              <callout
                      arearefs="area-JCR.ClusterConfig.Requirements.conf_lock_manager.jbosscache-cl-cache.jdbc.datasource">
                <para><parameter>jbosscache-cl-cache.jdbc.datasource</parameter>: Name of
                  the datasource configured in Container datasource, where you want to store
                  locks. The best idea is to use the same as for
                  workspace.
                </para>
              </callout>
            </calloutlist>
          </programlistingco>
          <para>Few properties are the same as in the previous
            components, but here you can see some strange
            "jbosscache-cl-cache.jdbc.*" properties. They define access
            parameters for the database where the lock is persisted.
          </para>

        </listitem>
      </itemizedlist>      

 <!-- 2.2.4.1. JBoss Cache Configuration -->
  <xi:include href="ClusterConfiguration/jbosscache-configuration-templates.xml"
              xmlns:xi="http://www.w3.org/2001/XInclude" />

 <!--  2.2.4.2. Stop the node properly -->
  <section id="JCR.ClusterConfig.How_to_stop_the_node_properly">
    <title>Stop the node properly</title>

    <para>To be sure that all transactions are over and JCR is in consistent
    state after stopping node, you need to follow these steps:</para>

    <itemizedlist>
      <listitem>
        <para>Connect using JMX to one of cluster's node which you will not need
        to stop.</para>
      </listitem>

      <listitem>
        <para>Use RepositorySuspendController suspend all repositories.</para>
      </listitem>

      <listitem>
        <para>Stop the node.</para>
      </listitem>

      <listitem>
        <para>Use RepositorySuspendController to resume all repositories.</para>
      </listitem>
    </itemizedlist>
  </section>
</section>
